name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc:
          - "8.10.7"
          - "9.0.2"
          - "9.2.8"
          - "9.4.8"
          - "9.6.6"
          - "9.8.4"
          - "9.10.1"

    steps:
    - uses: actions/checkout@v4
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell (Cabal)
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: "latest"

    - name: Freeze
      run: |
        cabal update
        cabal freeze

    - uses: actions/cache@v4
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}-key3

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        # https://gitlab.haskell.org/ghc/ghc/-/issues/20592#note_391266
        echo "C_INCLUDE_PATH=`xcrun --show-sdk-path`/usr/include/ffi" >> "$GITHUB_ENV"

    - name: Build
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal build all

    - name: Test
      run: |
        cabal test

  stack:
    name: stack / ${{ matrix.os }} / resolver ${{ matrix.resolver }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        resolver:
        - lts-18 # 8.10.7
        - lts-19 # 9.0.2
        - lts-20 # 9.2.8
        - lts-21 # 9.4.8
        - lts-22 # 9.6.6
        - lts-23 # 9.8.4
    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        # For older GHCs
        brew install llvm@13 --quiet # Suppress deprecation warning
        echo /opt/homebrew/opt/llvm@13/bin >> $GITHUB_PATH
        # https://gitlab.haskell.org/ghc/ghc/-/issues/20592#note_391266
        echo "C_INCLUDE_PATH=`xcrun --show-sdk-path`/usr/include/ffi" >> "$GITHUB_ENV"

    - uses: haskell-actions/setup@v2
      name: Setup Haskell (Stack)
      with:
        enable-stack: true
        stack-no-global: true
        stack-version: "latest"

    - name: Run stack setup
      shell: bash
      run: |
        export STACK_EXTRA_ARGS="--resolver ${{matrix.resolver}}"

        stack setup $STACK_EXTRA_ARGS

        echo STACK_EXTRA_ARGS="$STACK_EXTRA_ARGS" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-stack-key3

    - name: Build
      run: |
        stack build $STACK_EXTRA_ARGS --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test $STACK_EXTRA_ARGS
